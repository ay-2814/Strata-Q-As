Problem Statement
-------------------
Find the 3 most profitable companies in the entire world.
Output the result along with the corresponding company name.
Sort the result based on profits in descending order.

DataFrame: forbes_global_2010_2014Expected Output Type: pandas.DataFrame

Sample Data
-------------------
company				sector		industry		continent	country		marketvalue	sales	profits	assets	rank	forbeswebpage
ICBC				Financials	Major Banks		Asia		China		215.6		148.7	42.7	3124.9	1	http://www.forbes.com/companies/icbc/
China Construction Bank		Financials	Regional Banks		Asia		China		174.4		121.3	34.2	2449.5	2	http://www.forbes.com/companies/china-construction-bank/
Agricultural Bank of China	Financials	Regional Banks		Asia		China		141.1		136.4	27	2405.4	3	http://www.forbes.com/companies/agricultural-bank-of-china/
JPMorgan Chase			Financials	Major Banks		North America	United States	229.7		105.7	17.3	2435.3	4	http://www.forbes.com/companies/jpmorgan-chase/
Berkshire Hathaway		Financials	Investment Services	North America	United States	309.1		178.8	19.5	493.4	5	http://www.forbes.com/companies/berkshire-hathaway/

Python Script
-------------------
# Import your libraries
import pandas as pd

# Start writing code
forbes_global_2010_2014.head()

forbes_global_2010_2014 = forbes_global_2010_2014.groupby('company')['profits'].sum().reset_index().sort_values(by = 'profits', ascending = False)


forbes_global_top_3 = forbes_global_2010_2014[:3] #Slicing



# Approach 2, using nlargest
# forbes_global_2010_2014.nlargest(3, ['profits'])[['company', 'profits']]


SQL Query
------------------
select * from forbes_global_2010_2014 limit 5;



SELECT company, sum(profits) AS "Total Company Profits"
FROM forbes_global_2010_2014
GROUP BY company
ORDER BY sum(profits) DESC
LIMIT 3;

--TOP n does not work on PostgreSQL
