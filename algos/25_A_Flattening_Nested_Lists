Problem Statement:
--------------------
Given a nested list, flatten it so that it becomes a 1-D list.

Constraints
The input variable nested_list must be a list.
The elements of nested_list can be of any type, including integers, floats, strings, or other nested lists.
The nested lists can have any level of nesting, including empty lists.
The elements of the nested lists can be of any type, including integers, floats, strings, or other nested lists.


Solution:
----------
def flatten_list(nested_list):
    """ 
    :type nested_list: List[Any]
    :rtype: List[Any]
    """
    print(f"Inside flatten_list method with args {nested_list}")
    flattened_list = []
    for item in nested_list:
        if isinstance(item, list):
            flattened_list.extend(flatten_list(item))
        
        else:
            flattened_list.append(item)
            print(f"current state of list after appending: {flattened_list}")
    return flattened_list


Example input and output:
---------------------------
Inside flatten_list method with args [[1, 2, [3, 4], 5], [6], [7, [8, [9, 10]]]]
Inside flatten_list method with args [1, 2, [3, 4], 5]
current state of list after appending: [1]
current state of list after appending: [1, 2]
Inside flatten_list method with args [3, 4]
current state of list after appending: [3]
current state of list after appending: [3, 4]
current state of list after appending: [1, 2, 3, 4, 5]
Inside flatten_list method with args [6]
current state of list after appending: [6]
Inside flatten_list method with args [7, [8, [9, 10]]]
current state of list after appending: [7]
Inside flatten_list method with args [8, [9, 10]]
current state of list after appending: [8]
Inside flatten_list method with args [9, 10]
current state of list after appending: [9]
current state of list after appending: [9, 10]


Learnings:
----------
- Recursive function for lists
- list.append(input) adds the input as single item in the list. i.e. if list1 = [1,2,3] and list1.append([4,5]), output is [1,2,3,[4,5]]
- list.extend(input) unzips the input and adds each element individually. so list1.extend(input), the output will be [1,2,3,4,5]

