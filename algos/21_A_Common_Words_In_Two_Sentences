Problem Statement:
------------------
Find common words in any given two sentences and return them sorted alphabetically.

Constraints
The input variables sentence1 and sentence2 must be of type str.
The input sentences should not be empty.
The sentences can contain any characters, including letters, numbers, punctuation marks, and whitespace.
The sentences can be of any length, from empty strings to very long sentences.
The sentences are case-insensitive, meaning that the comparison of words should be done in a case-insensitive manner.
The sentences can contain duplicate words, but the output set should only contain unique common words.

Solution:
----------
import string

def find_common_words(input):
    """ 
    :type input: List[str] 
    :type sentence2: str 
    :rtype: Set[str]
    """

    sentence1 = input[0]
    sentence2 = input[1]
    set1 = set(word.strip(string.punctuation).lower() for word in sentence1.split())
    set2 = set(word.strip(string.punctuation).lower() for word in sentence2.split())
    print(set1, set2)
    common = set1.intersection(set2)
    sorted_common = sorted(common)
    print(sorted_common)
    return sorted_common

Learnings:
---------
1) string.punctuation - returns all the punctuations in a string
2) set.intersection(set2)
3) set also has a sorted method (attribute?)

