Problem Statement
------------------------
Return the total number of comments received for each user in the 30 or less days before 2020-02-10. Don't output users who haven't received any comment in the defined time period.

DataFrame: fb_comments_count
Expected Output Type: pandas.DataFrame


Sample Data:
--------------------
User_id	created_at		number_of_comments
18	2019-12-29 00:00:00	1
25	2019-12-21 00:00:00	1
78	2020-01-04 00:00:00	1
37	2020-02-01 00:00:00	1
41	2019-12-23 00:00:00	1
------------------------------------------------------


Python Script (Try 1)
-----------------------
# Import your libraries
import pandas as pd
import datetime

# Start writing code
fb_comments_count.head()

fb_comments_count['date'] = pd.to_datetime(fb_comments_count['created_at'])

end_date = datetime.datetime(2020, 2, 10) #year, month, date
start_date = end_date - datetime.timedelta(days = 30)
print(end_date, start_date)


fb_comments_count = fb_comments_count[(fb_comments_count['date'] > start_date) & (fb_comments_count['date'] <= end_date)]

#fb_comments_count = fb_comments_count.groupby("user_id").agg("count")
fb_comments_count = fb_comments_count.groupby("user_id")["number_of_comments"].sum().reset_index()

-----------------------------------------------------------------------------------------------------------------------------

Python Script - Try 2 (29th Aug 2024)
-------------------------------------
# Import your libraries
import pandas as pd
import datetime
from datetime import timedelta

# Start writing code
# fb_comments_count.head()
# fb_comments_count.info()

# Defining the number of days as a variable
n_days = 30

# Defining the date as a variable
Date = datetime.datetime(2020, 2, 10)

# Getting the target date using timedelta
target_date = Date - timedelta(days = n_days)

# Filter dataframe for the required time period using boolean indexin
fb_comments_count = fb_comments_count[(fb_comments_count['created_at'] >= target_date) & (fb_comments_count['created_at'] <= Date)]

# Number of comments check
fb_comments_count.number_of_comments.unique()

# Grouping the dataframe by user_id and summing number of comments' column
fb_comments_count = fb_comments_count.groupby('user_id').sum().reset_index()


----------------------------------------------------------------------------------------------------------------------------------------

SQL Query
---------------------
select * from fb_comments_count;


SELECT user_id, SUM(number_of_comments)
FROM fb_comments_count
WHERE created_at <= DATE('2020-02-10') AND created_at >= DATE('2020-02-10') - 30
GROUP BY user_id
